//file:noinspection GroovyAssignabilityCheck
import com.modrinth.minotaur.TaskModrinthUpload

plugins {
	id('fabric-loom') version('1.3.+')
	id('maven-publish')
	id('com.modrinth.minotaur') version('2.+')
	id('com.matthewprenger.cursegradle') version('1.+')
	id('io.github.juuxel.loom-vineflower') version('1.+')
}

def targetJavaVersion = 17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "Modrinth"
		url = 'https://api.modrinth.com/maven'
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven { url = 'https://maven.quiltmc.org/repository/release/' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(loom.layered {
		mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${project.quilt_mappings}:intermediary-v2")
	})
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	gradleApi()
}

processResources {
	inputs.property 'version', project.version

	filesMatching('fabric.mod.json') {
		expand 'version': project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding('UTF-8')
	it.options.deprecation(true)
	it.options.release.set(targetJavaVersion)
}

java {
	sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
	targetCompatibility = JavaVersion.toVersion(targetJavaVersion)

	withSourcesJar()
}

jar {
	from('LICENSE') {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

wrapper {
	gradleVersion("8.2.1")
	distributionType(Wrapper.DistributionType.BIN)
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories { }
}

loom {
	accessWidenerPath = file('src/main/resources/mobspecificenchants.accesswidener')
}

vineflower {
	addToRuntimeClasspath.set(true)
}

modrinth {
	token = System.getenv('MODRINTH_TOKEN')
	projectId = 'knrbsoH0'
	versionNumber = "$project.version"
	versionType = 'release'
	uploadFile = remapJar
	gameVersions = ["$project.minecraft_version"]
	loaders = ['fabric', 'Quilt']
}
def CURSEFORGE_TOKEN = System.getenv('CURSEFORGE_TOKEN')

curseforge {
	apiKey CURSEFORGE_TOKEN == null ? '' : CURSEFORGE_TOKEN
	project {
		id = '536220'
		releaseType = 'release'
		changelogType = 'markdown'
		changelog = file('changelog.md')
		relations {
			requiredDependency 'fabric-api'
		}
		addGameVersion "$project.minecraft_version"
		addGameVersion 'Quilt'
		addGameVersion 'Fabric'

		mainArtifact(remapJar) {
			displayName = "[$project.minecraft_version] v$project.version"
		}
		afterEvaluate {
			uploadTask.dependsOn(remapJar)
		}
	}
	options {
		forgeGradleIntegration = false
	}
}